type            = "directrequest"
schemaVersion   = 1
name            = "{{.JOB_NAME}}"
contractAddress = "{{.OPERATOR_ADDRESS}}"
externalJobID   = "{{.EXTERNAL_JOB_ID}}"
evmChainID      = "{{.CHAIN_ID}}"
minIncomingConfirmations = 3
observationSource = """
    decode_log  [type="ethabidecodelog" 
                abi="OracleRequest(bytes32 specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)" 
                data="$(jobRun.logData)" 
                topics="$(jobRun.logTopics)"]

    fetch       [type="http" 
                method="GET" 
                url="$(decode_log.data)" 
                allowUnrestrictedNetworkAccess="true"]

    parse       [type="jsonparse" 
                path="{{.PARSE_PATH}}" 
                data="$(fetch)"]

    encode_data [type="ethabiencode" 
                abi="(bytes32 requestId, bytes data)" 
                data="{\\"requestId\\": $(decode_log.requestId), \\"data\\": $(parse)}"]

    encode_tx   [type="ethabiencode" 
                abi="fulfillOracleRequest(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)" 
                data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"]

    submit_tx   [type="ethtx" 
                to="{{.OPERATOR_ADDRESS}}" 
                data="$(encode_tx)"]

    decode_log -> fetch -> parse -> encode_data -> encode_tx -> submit_tx
"""
